set () {
  local setpath="$(pwd)"

  if [ -z "$MARKPATH" ]; then
    >&2 echo "The variable MARKPATH has not been set."
    exit 1
  elif [ ! -e "$MARKPATH" ]; then
    echo "Creating directory at (" "$MARKPATH" ")."
    mkdir -p "$MARKPATH"
  elif [ -L "$MARKPATH/$1" ]; then
    >&2 echo "A filepath is already marked by $1."
    exit 2
  fi

  # The current directory shouldn't traverse $HOME/.marks
  # Refactor with bash string-processing utilities!
  echo "$(pwd)" | if grep "\.marks" >/dev/null; then
    local cut="$( echo "$(pwd)" | awk -F'.marks' '{print $2}' )"
    local mark="$( echo "$cut" | awk -F'/' '{print $2}' )"
    local leaf="$(echo "$cut" | cut -d'/' -f3- )"
    local expanded="$( ls -l "/home/theo/.marks/$mark" | awk '{print $11}' )"
    ln -s "$expanded/$leaf" "$MARKPATH/$1"
  else
    ln -s "$setpath" "$MARKPATH/$1"
  fi
}

unset () {
  local mark="$1"
  if [ -z "$MARKPATH" ]; then
    >&2 echo "The variable MARKPATH has not been set."
    exit 1
  elif [ ! -e "$MARKPATH" ]; then
    echo "No directory exists at (" "$MARKPATH" ")."
  else
    echo "Unsetting mark at (" "$MARKPATH/$mark" ")."
    rm -i "$MARKPATH/$mark"
  fi
}

all () {
  if [ -z "$MARKPATH" ]; then
    >&2 echo "The variable MARKPATH has not been set."
    exit 1
  elif [ ! -e "$MARKPATH" ]; then
    echo "Creating directory at (" "$MARKPATH" ")."
    mkdir -p "$MARKPATH"
  fi
  ls -l "$MARKPATH" | awk \
  '!/total/ {sub(/\/home\/\w*/, "~"); printf("%-20s%-3s%s\n", $9, $10, $11)}'
}

# Unsetting a mark that had been set by `link --var BASH_VARIABLE MARK`
# does not delete the BASH_VARIABLE that was created by `link`.
link () {
  if [ -z "$MARKPATH" ]; then
    >&2 echo "The variable MARKPATH has not been set."
    exit 1
  fi

  if [ -z "$VOLATILE_EXPORTS" ]; then
    >&2 echo "The variable VOLATILE_EXPORTS has not been set."
    exit 2
  fi

  if [[ $# = 2 || $# = 3 ]]; then
    if [[ "$1" = --var ]]; then
      echo "export $2=$(pwd)" >> "$VOLATILE_EXPORTS"

      # Only the runtime env of the subshell is modified:
      source "$VOLATILE_EXPORTS"

      ln -s \$$2 "$MARKPATH/$3"

    elif [ -e "$MARKPATH/$1" ]; then
      ln -s "$MARKPATH/$1" "$MARKPATH/$2"
    else
      echo "No such mark: $1"
    fi
  else
    return "Wrong number of arguments"
  fi
}

help () {
  awk '/\(\) {/ {print $1}' "$NAMESPACES/$NAMESPACE"
}
